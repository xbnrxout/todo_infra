name: Infra + App Deploy

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  RESOURCE_GROUP: todo-rg-dev
  CLUSTER_NAME: todo-aks-dev
  TERRAFORM_DIR: terraform/envs/dev
  K8S_MANIFEST_DIR: k8s-manifests
  PROJECT_NAME: todo
  ENVIRONMENT: dev
  GITHUB_REPO: xavrema/todo_infra
  ACR_NAME: todoacr
  AKS_NAME: todoaks
  COSMOS_ACCOUNT_NAME: todocosmos
  COSMOS_DB_NAME: tododb
  MONGO_COLLECTION_NAME: todoitems
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Clear Azure CLI cache & tokens
        run: |
          az logout || true
          az account clear || true

      - name: Azure login (Service Principal)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set Azure subscription
        run: az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Check Azure context
        run: az account show

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6
      - name: Terraform Init (OIDC + Reconfigure)
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: |
          terraform init \
            -input=false \
            -no-color \
            -upgrade \
            -lock=false \
            -reconfigure \
            -backend-config="tenant_id=${{ secrets.AZURE_TENANT_ID }}" \
            -backend-config="client_id=${{ secrets.AZURE_CLIENT_ID }}"

      - name: Terraform Plan
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: |
          terraform plan \
            -var="gh_app_id=${{ secrets.AZURE_CLIENT_ID }}" \
            -var="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
            -var="resource_group_name=${{ env.RESOURCE_GROUP }}" \
            -var="project_name=${{ env.PROJECT_NAME }}" \
            -var="environment=${{ env.ENVIRONMENT }}" \
            -var="github_repo=${{ env.GITHUB_REPO }}" \
            -var="acr_name=${{ env.ACR_NAME }}" \
            -var="aks_name=${{ env.AKS_NAME }}" \
            -var="cosmos_account_name=${{ env.COSMOS_ACCOUNT_NAME }}" \
            -var="cosmos_db_name=${{ env.COSMOS_DB_NAME }}" \
            -var="mongo_collection_name=${{ env.MONGO_COLLECTION_NAME }}"

      - name: Terraform Apply
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: |
          terraform apply -auto-approve \
            -var="gh_app_id=${{ secrets.AZURE_CLIENT_ID }}" \
            -var="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
            -var="resource_group_name=${{ env.RESOURCE_GROUP }}" \
            -var="project_name=${{ env.PROJECT_NAME }}" \
            -var="environment=${{ env.ENVIRONMENT }}" \
            -var="github_repo=${{ env.GITHUB_REPO }}" \
            -var="acr_name=${{ env.ACR_NAME }}" \
            -var="aks_name=${{ env.AKS_NAME }}" \
            -var="cosmos_account_name=${{ env.COSMOS_ACCOUNT_NAME }}" \
            -var="cosmos_db_name=${{ env.COSMOS_DB_NAME }}" \
            -var="mongo_collection_name=${{ env.MONGO_COLLECTION_NAME }}"

      - name: Get AKS credentials
        run: |
          az aks get-credentials \
            --name ${{ env.CLUSTER_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --overwrite-existing

      - name: Deploy CSI SecretProviderClass
        run: |
          kubectl apply -f ${{ env.K8S_MANIFEST_DIR }}/secretproviderclass.yaml

      - name: Verify K8s manifests exist
        run: |
          test -f "${{ env.K8S_MANIFEST_DIR }}/secretproviderclass.yaml"
          test -f "${{ env.K8S_MANIFEST_DIR }}/deployment-with-secret.yaml"

      - name: Deploy App
        run: |
          kubectl apply -f ${{ env.K8S_MANIFEST_DIR }}/deployment-with-secret.yaml
